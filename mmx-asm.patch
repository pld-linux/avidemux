--- avidemux_2.5.2-asm/avidemux/ADM_coreImage/include/ADM_mmxMacros.h~	2010-05-22 10:32:09.000000000 +0200
+++ avidemux_2.5.2-asm/avidemux/ADM_coreImage/include/ADM_mmxMacros.h	2010-05-22 10:38:24.837977894 +0200
@@ -348,16 +348,16 @@
 #define	mmx_i2r(op, imm, reg) \
 	__asm__ __volatile__ (#op " %0, %%" #reg \
 			      : /* nothing */ \
-			      : "X" (imm) )
+			      : "ym" (imm) )
 
 #define	mmx_m2r(op, mem, reg) \
 	__asm__ __volatile__ (#op " %0, %%" #reg \
 			      : /* nothing */ \
-			      : "X" (mem))
+			      : "ym" (mem))
 
 #define	mmx_r2m(op, reg, mem) \
 	__asm__ __volatile__ (#op " %%" #reg ", %0" \
-			      : "=X" (mem) \
+			      : "=ym" (mem) \
 			      : /* nothing */ )
 
 #define	mmx_r2r(op, regs, regd) \
@@ -367,8 +367,8 @@
 	__asm__ __volatile__ ("movq %0, %%mm0\n\t" \
 			      #op " %1, %%mm0\n\t" \
 			      "movq %%mm0, %0" \
-			      : "=X" (memd) \
-			      : "X" (mems))
+			      : "=ym" (memd) \
+			      : "ym" (mems))
 
 #endif
 
@@ -383,8 +383,8 @@
 #define	movq(vars, vard) \
 	__asm__ __volatile__ ("movq %1, %%mm0\n\t" \
 			      "movq %%mm0, %0" \
-			      : "=X" (vard) \
-			      : "X" (vars))
+			      : "=ym" (vard) \
+			      : "ym" (vars))
 
 
 /*	1x32 MOVe Doubleword
@@ -398,8 +398,8 @@
 #define	movd(vars, vard) \
 	__asm__ __volatile__ ("movd %1, %%mm0\n\t" \
 			      "movd %%mm0, %0" \
-			      : "=X" (vard) \
-			      : "X" (vars))
+			      : "=ym" (vard) \
+			      : "ym" (vars))
 
 
 /*	2x32, 4x16, and 8x8 Parallel ADDs
